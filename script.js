// Generated by Haxe 4.3.6
(function ($hx_exports, $global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {};
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Star = function(texture) {
	PIXI.Sprite.call(this,texture);
};
Star.__name__ = true;
Star.__super__ = PIXI.Sprite;
Star.prototype = $extend(PIXI.Sprite.prototype,{
});
var ABMap = function(x,y) {
	this.CY = 0;
	this.CX = 0;
	this.size = 20;
	this.xmax = 2 * this.size + 1;
	this.ymax = this.xmax;
	ABMap.WW = this.xmax * ABMap.BW;
	ABMap.HH = this.ymax * ABMap.BH;
	this.CX = x;
	this.CY = y;
	ABMap.SX = this.CX - this.size;
	ABMap.SY = this.CY - this.size;
	this.seedTable = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = this.xmax + ABMap.ZONE_MARGIN * 2;
	while(_g < _g1) {
		var x = _g++;
		var _g2 = 0;
		var _g3 = this.ymax + ABMap.ZONE_MARGIN * 2;
		while(_g2 < _g3) {
			var y = _g2++;
			var px = x + ABMap.SX - ABMap.ZONE_MARGIN;
			var py = y + ABMap.SY - ABMap.ZONE_MARGIN;
			var n = px * (1000 + py) + py | 0;
			var _this = this.seedTable;
			var value = new Random(n);
			_this.h["" + x + "," + y] = value;
		}
	}
	this.bmpBg = PIXI.RenderTexture.create(ABMap.WW,ABMap.HH);
	var base = new PIXI.Graphics();
	base.beginFill(Main.COL_SPACE);
	base.drawRect(0,0,ABMap.WW,ABMap.HH);
	Main.draw(this.bmpBg,base,new PIXI.Matrix());
	var stars = [];
	var brushLight = PIXI.Sprite.from(Main.app.loader.resources["mcLuz"].texture);
	brushLight.anchor.set(0.5,0.5);
	brushLight.blendMode = PIXI.BLEND_MODES.ADD;
	var _g = 0;
	var _g1 = this.xmax + 2 * ABMap.ZONE_MARGIN;
	while(_g < _g1) {
		var px = _g++;
		var _g2 = 0;
		var _g3 = this.ymax + 2 * ABMap.ZONE_MARGIN;
		while(_g2 < _g3) {
			var py = _g2++;
			var x = px - ABMap.ZONE_MARGIN;
			var y = py - ABMap.ZONE_MARGIN;
			x -= 5;
			var sc = 5;
			var seed = this.seedTable.h["" + (x + ABMap.ZONE_MARGIN) + "," + (y + ABMap.ZONE_MARGIN)];
			if(seed != null && seed.random(70) == 0) {
				var bi = 5;
				var ri = 90;
				var o = { r : bi + seed.random(ri), g : bi + seed.random(ri), b : bi + seed.random(ri)};
				var m = new PIXI.Matrix();
				m.scale((0.5 + seed.rand()) * sc,(0.5 + seed.rand()) * sc);
				m.translate(x * ABMap.BW,y * ABMap.BH);
				brushLight.tint = Main.objToCol(o);
				Main.draw(this.bmpBg,brushLight,m);
			}
			if(x >= 0 && x < this.xmax && y >= 0 && y < this.ymax) {
				var max = seed.random(3);
				var _g4 = 0;
				var _g5 = max;
				while(_g4 < _g5) {
					var i = _g4++;
					stars.push([(x + seed.rand()) * ABMap.BW,(y + seed.rand()) * ABMap.BH,0.2 + seed.rand() * 0.3]);
				}
			}
		}
	}
	var brushStar = PIXI.Sprite.from(Main.app.loader.resources["Star"].texture);
	brushStar.anchor.set(0.5,0.5);
	var _g = 0;
	while(_g < stars.length) {
		var p = stars[_g];
		++_g;
		var sc = p[2];
		var m = new PIXI.Matrix();
		m.scale(sc,sc);
		m.translate(p[0],p[1]);
		Main.draw(this.bmpBg,brushStar,m);
	}
};
ABMap.__name__ = true;
var Main = $hx_exports["Main"] = function() { };
Main.__name__ = true;
Main.main = function() {
	Main.app = new PIXI.Application({ width : 820, height : 738});
	window.document.getElementById("map_data").appendChild(Main.app.view);
	Main.app.loader.baseUrl = "images";
	Main.app.loader.add("mcLuz","sprites/mcLuz.png").add("Star","sprites/Star.png");
	Main.app.loader.once("complete",Main.init);
	Main.app.loader.load();
};
Main.init = function() {
	Main.map = new ABMap(0,0);
	Main.app.stage.addChild(Main.map.bmpBg);
};
Main.draw = function(onto,object,matrix) {
	Main.app.renderer.render(object,{ renderTexture : onto, clear : false, transform : matrix});
};
Main.objToCol = function(o) {
	return o.r << 16 | o.g << 8 | o.b;
};
Math.__name__ = true;
var Random = function(s) {
	this.seed = s;
};
Random.__name__ = true;
Random.prototype = {
	rand: function() {
		this.seed = (1664525.0 * this.seed + 1013904223.0 | 0) & 1073741823;
		return this.seed % 1000 / 1000;
	}
	,random: function(n) {
		this.seed = (1664525.0 * this.seed + 1013904223.0 | 0) & 1073741823;
		return this.seed % n;
	}
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
haxe_ds_StringMap.__name__ = true;
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
ABMap.BW = 20;
ABMap.BH = 18;
ABMap.ZONE_MARGIN = 10;
ABMap.WW = 0;
ABMap.HH = 0;
ABMap.SX = 0;
ABMap.SY = 0;
Main.COL_SPACE = 80;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, {});
